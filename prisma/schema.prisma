generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reservations Reservation[]
}

model Court {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  reservations Reservation[]
}

model Reservation {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  court     Court    @relation(fields: [courtId], references: [id])
  courtId   Int
  date      DateTime // date part used for grouping by day (use UTC midnight)
  startMin  Int      // minutes from midnight (5-min increments)
  endMin    Int      // minutes from midnight (5-min increments)
  partySize Int      // 1..4
  playerNames String[] // full names of all participants (length must equal partySize)
  pin       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courtId, date])
  @@index([userId, date])
  // Allow multiple rows in the same slot; capacity is enforced in API
  @@index([date, courtId, startMin, endMin])
}

model AuditLog {
  id        String   @id @default(cuid())
  action    String
  actorEmail String?
  meta      Json?
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

model CourtSetting {
  id          String   @id @default(cuid())
  date        DateTime // date part only (UTC midnight)
  courtCount  Int      // 1..8
  courtNames  String[] // length should equal courtCount
  startMin    Int      @default(540)  // 09:00
  endMin      Int      @default(1260) // 21:00 (exclusive)
  slotMinutes Int      @default(30)   // 30-minute slots
  preparing   Boolean  @default(false) // true = 準備中（予約UI/APIを停止）
  notice      String?  // 予約画面に表示するお知らせ（管理画面で編集）
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([date])
}

// Per-court blackout (予約不可) slots for a given day
model CourtBlock {
  id        String   @id @default(cuid())
  date      DateTime // UTC midnight for the day
  courtId   Int
  startMin  Int      // minutes from midnight (5-min increments)
  endMin    Int      // minutes from midnight (5-min increments)
  reason    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([date])
  @@index([date, courtId])
  @@index([date, courtId, startMin, endMin])
}

model AdminConfig {
  id        String   @id
  adminPin  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
